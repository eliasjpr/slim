stages:
  - build
  - specs
  - release
  - deploy

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - libs
    - bin

.docker: &dind
  services:
    - docker:dind
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker info
  tags:
    - docker

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest
  CONTAINER_TEST_IMAGE: ${CI_REGISTRY_IMAGE}:test
  POSTGRES_DB: slim_test
  POSTGRES_USER: db_admin
  POSTGRES_PASSWORD: ""
  CRYSTAL_WORKERS: 8
  LOG_LEVEL: info
  DB_POOL_SIZE: 1
  DATABASE_URL: postgres://db_admin:@postgres/slim_test

Build Image:
  <<: *dind
  stage: build
  cache:
    key: build-cache
    paths:
    - lib/
    - bin/
  script:
    - docker pull $CONTAINER_TEST_IMAGE:latest || true
    - docker build --cache-from $CONTAINER_TEST_IMAGE -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

Static Code Analysis:
  stage: specs
  image: $CONTAINER_TEST_IMAGE
  cache:
    key: build-cache
  script:
    - cd /app
    - ./bin/ameba 
  
Code Format:
  stage: specs
  image: $CONTAINER_TEST_IMAGE
  cache:
    key: build-cache
  script:
    - crystal tool format --check

Unit Tests:
  stage: specs
  image: $CONTAINER_TEST_IMAGE
  cache:
    key: build-cache
  services:
    - postgres:latest
  script:
    - shards install
    - crystal src/db/cli.cr -- clear migrate
    - crystal spec spec/domain

Endpoints Tests:
  stage: specs
  services:
    - docker:dind
  cache:
    key: build-cache
  variables:
    DOCKER_DRIVER: overlay2
  image: tiangolo/docker-with-compose
  script: 
    - docker-compose up --build -d
    - docker-compose run test
  artifacts:
    paths:
    - ./
    expire_in: 1 week

Tag Release Images:
  <<: *dind
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_IMAGE_LATEST
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_IMAGE
    - docker push $CONTAINER_IMAGE_LATEST
    - docker push $CONTAINER_IMAGE
  only:
    - master

Digital Ocean:
  stage: deploy
  image: lachlanevenson/k8s-kubectl:latest
  script:
    - kubectl apply -f deploy
    - kubectl set image deployments/slim-api-deployment slim=$CONTAINER_IMAGE
  tags:
    - kubernetes
    - cluster
  only:
    - master